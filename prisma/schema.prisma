generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model health_plan {
  id                                     String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  senior_user_id                         String?    @db.Uuid
  health_coach_id                        String?    @db.Uuid
  plan_details                           String     @db.VarChar(255)
  created_at                             DateTime   @default(now()) @db.Timestamp(6)
  updated_at                             DateTime   @default(now()) @db.Timestamp(6)
  user_health_plan_health_coach_idTouser user?      @relation("health_plan_health_coach_idTouser", fields: [health_coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_health_plan_senior_user_idTouser  user?      @relation("health_plan_senior_user_idTouser", fields: [senior_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  progress                               progress[]
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model progress {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  senior_user_id   String?      @db.Uuid
  health_plan_id   String?      @db.Uuid
  progress_details String       @db.VarChar(255)
  created_at       DateTime     @default(now()) @db.Timestamp(6)
  updated_at       DateTime     @default(now()) @db.Timestamp(6)
  health_plan      health_plan? @relation(fields: [health_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user?        @relation(fields: [senior_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                         String         @unique @db.VarChar(255)
  firstName                                     String?        @db.VarChar(255)
  lastName                                      String?        @db.VarChar(255)
  roq_user_id                                   String         @db.VarChar(255)
  tenant_id                                     String         @db.VarChar(255)
  created_at                                    DateTime       @default(now()) @db.Timestamp(6)
  updated_at                                    DateTime       @default(now()) @db.Timestamp(6)
  health_plan_health_plan_health_coach_idTouser health_plan[]  @relation("health_plan_health_coach_idTouser")
  health_plan_health_plan_senior_user_idTouser  health_plan[]  @relation("health_plan_senior_user_idTouser")
  organization                                  organization[]
  progress                                      progress[]
}
